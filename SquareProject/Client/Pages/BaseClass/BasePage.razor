@namespace Pages.BaseClass
@using System.ComponentModel;
@using ViewModels.BaseClass;

@inherits ComponentBase

@code {

    [CascadingParameter(Name = "ViewModel")]
    private IViewModelBase ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        /*ViewModel.PropertyChanged += async (sender, e) =>
        {
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };*/
        await base.OnInitializedAsync();
    }

    async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        ViewModel.PropertyChanged -= OnPropertyChangedHandler;
    }

}
